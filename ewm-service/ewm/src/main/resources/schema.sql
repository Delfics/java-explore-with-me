DROP TABLE IF EXISTS compilations, categories, events, users, participation_request, comments CASCADE;

CREATE TABLE IF NOT EXISTS compilations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN,
    title varchar(50) NOT NULL
);
CREATE TABLE IF NOT EXISTS categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(55) NOT NULL UNIQUE
);
CREATE TABLE IF NOT EXISTS users (
    email varchar(254) NOT NULL UNIQUE ,
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(250) NOT NULL
);
CREATE TABLE IF NOT EXISTS events (
    annotation varchar(2000) NOT NULL,
    category_id BIGINT,
    confirmed_requests BIGINT NOT NULL,
    created_on TIMESTAMP ,
    description varchar(7000) NOT NULL,
    event_date TIMESTAMP NOT NULL,
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    initiator_id BIGINT,
    paid BOOLEAN NOT NULL,
    participant_limit BIGINT NOT NULL,
    published_on TIMESTAMP,
    request_moderation BOOLEAN NOT NULL,
    states varchar(255) NOT NULL,
    title varchar(120) NOT NULL,
    CONSTRAINT fk_category FOREIGN KEY (category_id) REFERENCES categories(id) ON DELETE CASCADE,
    CONSTRAINT fk_initiator FOREIGN KEY (initiator_id) REFERENCES users(id) ON DELETE CASCADE
);
ALTER TABLE events ADD COLUMN compilation_id BIGINT;
ALTER TABLE events ADD CONSTRAINT fk_compilation FOREIGN KEY (compilation_id) REFERENCES compilations(id)
    ON DELETE CASCADE;
CREATE TABLE IF NOT EXISTS participation_request (
    created TIMESTAMP NOT NULL,
    event_id BIGINT NOT NULL,
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    requester_id BIGINT NOT NULL,
    status VARCHAR(255) NOT NULL,
    CONSTRAINT fk_event FOREIGN KEY (event_id) REFERENCES events(id) ON DELETE CASCADE,
    CONSTRAINT fk_requester FOREIGN KEY (requester_id) REFERENCES users(id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS comments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_id BIGINT NOT NULL,
    text VARCHAR(2000) NOT NULL,
    created_time TIMESTAMP,
    users_id BIGINT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    events_id BIGINT NOT NULL REFERENCES events(id) ON DELETE CASCADE
);